{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","onChange","event","console","log","target","rows","backgroundColor","newText","toUpperCase","showalert","toLowerCase","split","length","defaultProps","App","setalert","message","msg","setTimeout","_useState3","_useState4","setMode","document","body","setInterval","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f21c5927.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link} from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}   >\r\n        <div className=\"container-fluid \"  >\r\n          <a className=\"navbar-brand\"  href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\" >\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item dropdown\">\r\n                <Link\r\n                  className=\"nav-link dropdown-toggle\"\r\n                  to=\"#\"\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </Link>\r\n                <ul className=\"dropdown-menu\">\r\n                  <li>\r\n                    <Link className=\"dropdown-item\" to=\"#\">\r\n                      Action\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link  className=\"dropdown-item\" to=\"#\">\r\n                      Another action\r\n                    </Link>\r\n                  </li>\r\n                  <li> \r\n                    <hr className=\"dropdown-divider\" />\r\n                  </li>\r\n                  <li>\r\n                    <Link className=\"dropdown-item\" to=\"#\">\r\n                      Something else here\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link disabled\">Disabled</a>\r\n              </li>*/}\r\n            </ul>\r\n            <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n            <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'} `}>\r\n  <input className=\"form-check-input \" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"set titel here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    console.log(\"uppercase was click\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showalert(\"converted to upperCase\",\"success\")\r\n  };\r\n  const handleLoClick = () => {\r\n    console.log(\"uppercase was click\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showalert(\"converted to lowerCase\",\"success\")\r\n  };\r\n  const handleOnChange = (event) => {\r\n    console.log(\" click Onchange\");\r\n    \r\n    setText(event.target.value);\r\n\r\n  };\r\n\r\n  const [text, setText] = useState(\"enter text here\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\"  style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            style={{backgroundColor:props.mode==='dark'?'gray':'white',color:props.mode==='dark'?'white':'black'}}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert to upperCase\r\n        </button>\r\n        <button className=\"btn btn-primary  mx-2\" onClick={handleLoClick}>\r\n          Convert to LowerCase\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-5\"  style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h1>Your text summery</h1>\r\n        <p> words {text.split(\" \").length} and charactor{text.length}</p>\r\n        <p> Time to read {text.split(\" \").length * 0.008} in minites</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something to preview here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\nconst [alert, setalert] = useState(null)\nconst showalert=(message,type)=>{\n  setalert({\nmsg:message,\ntype:type\n  })\n  setTimeout(()=>{\n    setalert(null);\n  },2000);\n}\n\nconst [mode, setMode] = useState(\"light\")\n\nconst toggleMode=()=>{\n  if(mode==='light'){\n    setMode('dark');\n    document.body.style.backgroundColor=' #121738 ';\n    showalert(\"Dark mode is Enable\",\"success\");\n    document.title=\"Text is Dark mode\"\n    setInterval(() => {\n      document.title=\" Text is WoW\"\n    }, 2000);\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor='white';\n    showalert(\"Light mode is Enable\",\"success\");\n    document.title=\"Text is light mode\"\n    setInterval(() => {\n      document.title=\"Install Text\"\n    }, 1500);\n  }\n\n}\n  return (\n    <>\n    {/* <Router>\n      <Navbar title=\"koushik\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      <Switch>\n     \n          <Route path=\"/about\" >\n            <About />\n          </Route>\n          <Route path=\"/\" component={TextForm}>\n          <div ><TextForm showalert={showalert} heading=\"Text Analise\" mode={mode}/></div>\n          </Route>\n       \n        </Switch> \n   \n   \n     </div>\n     </Router> */}\n     <Navbar title=\"koushik\" mode={mode} toggleMode={toggleMode} />\n     <div ><TextForm showalert={showalert} heading=\"Text Analise\" mode={mode}/></div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}